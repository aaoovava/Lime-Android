// Generated by view binder compiler. Do not edit!
package com.example.limeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.limeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BuyActivityBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView BuyTxtTop;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView GroupBuy;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView PersonalBuy;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final RecyclerView buyHistory;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout con1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView imageView52;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView navBuy;

  @NonNull
  public final ImageView navFirstScreen;

  @NonNull
  public final ImageView navProfile;

  @NonNull
  public final ImageView navVerefication;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout sheet;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView15;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView16;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView17;

  private BuyActivityBinding(@NonNull View rootView, @Nullable TextView BuyTxtTop,
      @Nullable ImageView GroupBuy, @Nullable ImageView PersonalBuy,
      @Nullable RecyclerView buyHistory, @Nullable ConstraintLayout con1,
      @Nullable ImageView imageView52, @NonNull LinearLayout linearLayout,
      @NonNull ImageView navBuy, @NonNull ImageView navFirstScreen, @NonNull ImageView navProfile,
      @NonNull ImageView navVerefication, @Nullable ConstraintLayout sheet,
      @Nullable TextView textView15, @Nullable TextView textView16, @Nullable TextView textView17) {
    this.rootView = rootView;
    this.BuyTxtTop = BuyTxtTop;
    this.GroupBuy = GroupBuy;
    this.PersonalBuy = PersonalBuy;
    this.buyHistory = buyHistory;
    this.con1 = con1;
    this.imageView52 = imageView52;
    this.linearLayout = linearLayout;
    this.navBuy = navBuy;
    this.navFirstScreen = navFirstScreen;
    this.navProfile = navProfile;
    this.navVerefication = navVerefication;
    this.sheet = sheet;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.textView17 = textView17;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static BuyActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BuyActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.buy_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BuyActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BuyTxtTop;
      TextView BuyTxtTop = ViewBindings.findChildViewById(rootView, id);

      id = R.id.GroupBuy;
      ImageView GroupBuy = ViewBindings.findChildViewById(rootView, id);

      id = R.id.PersonalBuy;
      ImageView PersonalBuy = ViewBindings.findChildViewById(rootView, id);

      id = R.id.buyHistory;
      RecyclerView buyHistory = ViewBindings.findChildViewById(rootView, id);

      id = R.id.con1;
      ConstraintLayout con1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.imageView52;
      ImageView imageView52 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.nav_buy;
      ImageView navBuy = ViewBindings.findChildViewById(rootView, id);
      if (navBuy == null) {
        break missingId;
      }

      id = R.id.nav_firstScreen;
      ImageView navFirstScreen = ViewBindings.findChildViewById(rootView, id);
      if (navFirstScreen == null) {
        break missingId;
      }

      id = R.id.nav_profile;
      ImageView navProfile = ViewBindings.findChildViewById(rootView, id);
      if (navProfile == null) {
        break missingId;
      }

      id = R.id.nav_verefication;
      ImageView navVerefication = ViewBindings.findChildViewById(rootView, id);
      if (navVerefication == null) {
        break missingId;
      }

      id = R.id.sheet;
      ConstraintLayout sheet = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);

      return new BuyActivityBinding(rootView, BuyTxtTop, GroupBuy, PersonalBuy, buyHistory, con1,
          imageView52, linearLayout, navBuy, navFirstScreen, navProfile, navVerefication, sheet,
          textView15, textView16, textView17);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
